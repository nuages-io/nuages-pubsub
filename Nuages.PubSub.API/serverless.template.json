{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Description": "An AWS Serverless Application that uses the ASP.NET Core framework running in Amazon Lambda.",
  "Parameters": {
      
      "MongoConnectionString": {
        "Type": "String",
        "Description": "Mongo ConnectionString"
      },
      "Issuer": {
        "Type": "String",
        "Description": "Issuer used when emitting token"
      },
      "Secret": {
        "Type": "String",
        "Description": "Secret used when signing token"
      },
      "ConfigurationManagerPath": {
        "Type": "String",
        "Description": "Path of the Configuration Manager section to load into the configuration",
        "Default" : ""
      },
      "DomainName": {
        "Type": "String",
        "Description": "Public DomainName"
      },
      "CertificateArn": {
        "Type": "String",
        "Description": "Certificate associated with endpoint"
      },
      "HostedZoneId":
      {
        "Type": "String",
        "Description": "Route53 zone id"
      }
    },
  "Conditions": {},
  "Resources": {
    
    "NuagesApiDomainName": {
      "Type": "AWS::ApiGatewayV2::DomainName",
      "Properties": {
        "DomainName": {
          "Ref": "DomainName"
        },
        "DomainNameConfigurations": [
          {
            "EndpointType": "REGIONAL",
            "CertificateArn": {
              "Ref": "CertificateArn"
            }
          }
        ]
      }
    },
    "NuagesApiMapping": {
      "Type": "AWS::ApiGatewayV2::ApiMapping",
      "Properties": {
        "DomainName": {
          "Ref": "NuagesApiDomainName"
        },
        "ApiId": {
          "Ref": "ServerlessRestApi"
        },
        "Stage": {"Ref" : "ServerlessRestApiProdStage"}
      }
    },
    "Route53RecordSetGroup":
    {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" :
      {
        "Name" :{
          "Ref": "NuagesApiDomainName"
        },
        "Type" : "A",
        "HostedZoneId" : {"Ref" : "HostedZoneId"},
        "AliasTarget" :
        {
          "DNSName" :  { "Fn::GetAtt" : [ "NuagesApiDomainName", "RegionalDomainName" ] },
          "HostedZoneId" : { "Fn::GetAtt" : [ "NuagesApiDomainName", "RegionalHostedZoneId" ] }
        }
      }
    },
    "NuagesPubSubApiRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "NuagesPubSubApiRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": [ "lambda.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          }]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "LambdaBasicExecutionRole",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "*"
            }]
          }
        },
          {
            "PolicyName": "SystemsManagerParametersRole",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [{
                "Effect": "Allow",
                "Action": "ssm:GetParametersByPath",
                "Resource": "*"
              }]
            }
          },
          {
            "PolicyName" : "LambdaFullAccess",
            "PolicyDocument":
            {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "cloudformation:DescribeStacks",
                    "cloudformation:ListStackResources",
                    "cloudwatch:ListMetrics",
                    "cloudwatch:GetMetricData",
                    "ec2:DescribeSecurityGroups",
                    "ec2:DescribeSubnets",
                    "ec2:DescribeVpcs",
                    "kms:ListAliases",
                    "iam:GetPolicy",
                    "iam:GetPolicyVersion",
                    "iam:GetRole",
                    "iam:GetRolePolicy",
                    "iam:ListAttachedRolePolicies",
                    "iam:ListRolePolicies",
                    "iam:ListRoles",
                    "lambda:*",
                    "logs:DescribeLogGroups",
                    "states:DescribeStateMachine",
                    "states:ListStateMachines",
                    "tag:GetResources",
                    "xray:GetTraceSummaries",
                    "xray:BatchGetTraces"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": "iam:PassRole",
                  "Resource": "*",
                  "Condition": {
                    "StringEquals": {
                      "iam:PassedToService": "lambda.amazonaws.com"
                    }
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:DescribeLogStreams",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:log-group:/aws/lambda/*"
                }
              ]
            }
          }]
      }
    },
    "AspNetCoreFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        
        "Handler": "Nuages.PubSub.API::Nuages.PubSub.API.LambdaEntryPoint::FunctionHandlerAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": {
        "Fn::GetAtt": [
          "NuagesPubSubApiRole",
          "Arn"
        ]
        },
        "Environment": {
          "Variables": {
            "Nuages__Mongo__Connection": {
              "Ref": "MongoConnectionString"
            },
            "Nuages__ConfigurationManagerPath": {
              "Ref": "ConfigurationManagerPath"
            },
            "Nuages__PubSub__Issuer": {
              "Ref": "Issuer"
            },
            "Nuages__PubSub__Secret": {
              "Ref": "Secret"
            }
          }
        },
        "Policies": [
          "AWSLambda_FullAccess"
        ],
        "Events": {
          "ProxyResource": {
            "Type": "Api",
            "Properties": {
              "Path": "/{proxy+}",
              "Method": "ANY"
            }
          },
          "RootResource": {
            "Type": "Api",
            "Properties": {
              "Path": "/",
              "Method": "ANY"
            }
          }
        }
      }
    }
  },
  "Outputs": {
    "ApiURL": {
      "Description": "API endpoint URL for Prod environment",
      "Value": {
        "Fn::Sub": "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
      }
    }
  }
}
