{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Description": "An AWS Serverless Application.",
  "Parameters": {
    
    "MongoConnectionString": {
      "Type": "String",
      "Description": "Mongo ConnectionString"
    },
    "Issuers": {
      "Type": "String",
      "Description": "List of valid issuers"
    },
    "Audiences": {
      "Type": "String",
      "Description": "List of valid audiences"
    },
    "DisableSslCheck": {
      "Type": "String",
      "Description": "Disable SSL check when loading signing key set"
    },
    "ConfigurationManagerPath": {
      "Type": "String",
      "Description": "Path of the COnfiguration Manager section to load into the configuration"
    }
  },
  "Resources": {
    "NuagesPubSubRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "NuagesPubSubRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": [ "lambda.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          }]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "LambdaBasicExecutionRole",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "*"
            }]
          }
        },
          {
            "PolicyName": "SystemsManagerParametersRole",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [{
                "Effect": "Allow",
                "Action": "ssm:GetParametersByPath",
                "Resource": "*"
              }]
            }
          },
          {
            "PolicyName" : "ExecuteApiConnectionRole",
              "PolicyDocument":
              {
                "Statement": {
                  "Effect": "Allow",
                  "Action": "execute-api:ManageConnections",
                  "Resource": "arn:aws:execute-api:*:*:*/@connections/*"
                }
            }
          }]
      }
    },
    "OnConnectFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "Nuages.PubSub.LambdaApp::Nuages.PubSub.LambdaApp.Functions::OnConnectHandler",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": {
          "Fn::GetAtt": [
            "NuagesPubSubRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {

            "Nuages__Mongo__Connection": {
              "Ref": "MongoConnectionString"
            },
            "Nuages__Auth__Issuers": {
              "Ref": "Issuers"
            },
            "Nuages__Auth__Audiences": {
              "Ref": "Audiences"
            },
            "Nuages__DisableSslCheck": {
              "Ref": "DisableSslCheck"
            },
            "Nuages__ConfigurationManagerPath": {
              "Ref": "MongoConnectionString"
            }
          }
        }
      }
    },
    "OnDisconnectFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "Nuages.PubSub.LambdaApp::Nuages.PubSub.LambdaApp.Functions::OnDisconnectHandler",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": {
          "Fn::GetAtt": [
            "NuagesPubSubRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "Nuages__Mongo__Connection": {
              "Ref": "MongoConnectionString"
            },
            "Nuages__Auth__Issuers": {
              "Ref": "Issuers"
            },
            "Nuages__Auth__Audiences": {
              "Ref": "Audiences"
            },
            "Nuages__DisableSslCheck": {
              "Ref": "DisableSslCheck"
            },
            "Nuages__ConfigurationManagerPath": {
              "Ref": "MongoConnectionString"
            }
          }
        }
      }
    },
    "OnAuthorizeFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "Nuages.PubSub.LambdaApp::Nuages.PubSub.LambdaApp.Functions::OnAuthorizeHandlerAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": {
          "Fn::GetAtt": [
            "NuagesPubSubRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "Nuages__Mongo__Connection": {
              "Ref": "MongoConnectionString"
            },
            "Nuages__Auth__Issuers": {
              "Ref": "Issuers"
            },
            "Nuages__Auth__Audiences": {
              "Ref": "Audiences"
            },
            "Nuages__DisableSslCheck": {
              "Ref": "DisableSslCheck"
            },
            "Nuages__ConfigurationManagerPath": {
              "Ref": "MongoConnectionString"
            }
          }
        }
      }
    },
    "SendMessageFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "Nuages.PubSub.LambdaApp::Nuages.PubSub.LambdaApp.Functions::SendMessageHandler",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": {
          "Fn::GetAtt": [
            "NuagesPubSubRole",
            "Arn"
          ]
        }
        ,
        "Environment": {
          "Variables": {
            "Nuages__Mongo__Connection": {
              "Ref": "MongoConnectionString"
            },
            "Nuages__Auth__Issuers": {
              "Ref": "Issuers"
            },
            "Nuages__Auth__Audiences": {
              "Ref": "Audiences"
            },
            "Nuages__DisableSslCheck": {
              "Ref": "DisableSslCheck"
            },
            "Nuages__ConfigurationManagerPath": {
              "Ref": "MongoConnectionString"
            }
          }
        }
      }
    },
    "EchoFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "Nuages.PubSub.LambdaApp::Nuages.PubSub.LambdaApp.Functions::EchoHandler",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": {
          "Fn::GetAtt": [
            "NuagesPubSubRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "Nuages__Mongo__Connection": {
              "Ref": "MongoConnectionString"
            },
            "Nuages__Auth__Issuers": {
              "Ref": "Issuers"
            },
            "Nuages__Auth__Audiences": {
              "Ref": "Audiences"
            },
            "Nuages__DisableSslCheck": {
              "Ref": "DisableSslCheck"
            },
            "Nuages__ConfigurationManagerPath": {
              "Ref": "MongoConnectionString"
            }
          }
        }
      }
    },
    "NuagesPubSubLambdaApp": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "NuagesPubSubLambdaApp",
        "ProtocolType": "WEBSOCKET",
        "RouteSelectionExpression": "$request.body.message"
      }
    },
    "Authorizer": {
      "Type": "AWS::ApiGatewayV2::Authorizer",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSubLambdaApp"
        },
        "AuthorizerType": "REQUEST",
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region"
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "OnAuthorizeFunction",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        },
        "IdentitySource": [
          "route.request.querystring.authorization"
        ],
        "Name": "Authorizer"
      }
    },
    "ConnectRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSubLambdaApp"
        },
        "RouteKey": "$connect",
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "Authorizer"
        },
        "OperationName": "ConnectRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "ConnectInteg"
              }
            ]
          ]
        }
      }
    },
    "ConnectInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSubLambdaApp"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${function}/invocations",
            {
              "region": {
                "Ref": "AWS::Region"
              },
              "function": {
                "Fn::GetAtt": [
                  "OnConnectFunction",
                  "Arn"
                ]
              }
            }
          ]
        }
      }
    },
    "DisconnectRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSubLambdaApp"
        },
        "RouteKey": "$disconnect",
        "AuthorizationType": "NONE",
        "OperationName": "ConnectRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "DisconnectInteg"
              }
            ]
          ]
        }
      }
    },
    "DisconnectInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSubLambdaApp"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${function}/invocations",
            {
              "region": {
                "Ref": "AWS::Region"
              },
              "function": {
                "Fn::GetAtt": [
                  "OnDisconnectFunction",
                  "Arn"
                ]
              }
            }
          ]
        }
      }
    },
    "SendMessageRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSubLambdaApp"
        },
        "RouteKey": "sendmessage",
        "AuthorizationType": "NONE",
        "OperationName": "ConnectRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "SendMessageInteg"
              }
            ]
          ]
        }
      }
    },
    "SendMessageInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSubLambdaApp"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${function}/invocations",
            {
              "region": {
                "Ref": "AWS::Region"
              },
              "function": {
                "Fn::GetAtt": [
                  "SendMessageFunction",
                  "Arn"
                ]
              }
            }
          ]
        }
      }
    },
    "EchoRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSubLambdaApp"
        },
        "RouteKey": "echo",
        "AuthorizationType": "NONE",
        "OperationName": "EchoRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "EchoInteg"
              }
            ]
          ]
        }
      }
    },
    "EchoInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSubLambdaApp"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${function}/invocations",
            {
              "region": {
                "Ref": "AWS::Region"
              },
              "function": {
                "Fn::GetAtt": [
                  "EchoFunction",
                  "Arn"
                ]
              }
            }
          ]
        }
      }
    },
    "Deployment": {
      "Type": "AWS::ApiGatewayV2::Deployment",
      "DependsOn": [
        "ConnectRoute",
        "SendMessageRoute",
        "DisconnectRoute"
      ],
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSubLambdaApp"
        }
      }
    },
    "Stage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSubLambdaApp"
        },
        "DeploymentId": {
          "Ref": "Deployment"
        },
        "StageName": "Prod"
      }
    },
    "OnConnectPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "OnConnectFunction",
        "NuagesPubSubLambdaApp"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "OnConnectFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "OnDisconnectPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "OnDisconnectFunction",
        "NuagesPubSubLambdaApp"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "OnDisconnectFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "SendMessagePermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "SendMessageFunction",
        "NuagesPubSubLambdaApp"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "SendMessageFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "EchoPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "EchoFunction",
        "NuagesPubSubLambdaApp"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "EchoFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "OnAuthorizePermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "OnAuthorizeFunction",
        "NuagesPubSubLambdaApp"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "OnAuthorizeFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    }
  },
  "Outputs": {
    "NuagesPubSubURI": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "wss://",
            {
              "Ref": "NuagesPubSubLambdaApp"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".amazonaws.com/",
            {
              "Ref": "Stage"
            }
          ]
        ]
      },
      "Description": "The WSS Protocol URI to connect to"
    }
  }
}