{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Description": "An AWS Serverless Application.",
  "Parameters": {
    
    "MongoConnectionString": {
      "Type": "String",
      "Description": "Mongo ConnectionString"
    },
    "ValidIssuers": {
      "Type": "String",
      "Description": "List of valid issuers"
    },
    "ValidAudiences": {
      "Type": "String",
      "Description": "List of valid audiences. Leave blank if you do not want to validate",
      "Default" : ""
    },
    "DisableSslCheck": {
      "Type": "String",
      "Description": "Disable SSL check when loading signing key set"
    },
    "ConfigurationManagerPath": {
      "Type": "String",
      "Description": "Path of the Configuration Manager section to load into the configuration",
      "Default" : ""
    },
    "Secret": {
      "Type": "String",
      "Description": "Secret ket used when signing the JWT. LEave blank to use ",
      "Default" : ""
    },
    "JsonWebKeySetUrlPath": {
      "Type": "String",
      "Description": "Url used to retrieve signing key when no secret is provided ",
      "Default" : ".well-known/jwks.json"
    },
    "DomainName": {
      "Type": "String",
      "Description": "Public DomainName"
    },
    "CertificateArn": {
      "Type": "String",
      "Description": "Certificate associated with endpoint"
    },
    "HostedZoneId":
    {
      "Type": "String",
      "Description": "Route53 zone id"
    }
  },
  "Resources": {
    "NuagesDomainName": {
      "Type": "AWS::ApiGatewayV2::DomainName",
      "Properties": {
        "DomainName": {
          "Ref": "DomainName"
        },
        "DomainNameConfigurations": [
          {
            "EndpointType": "REGIONAL",
            "CertificateArn": {
              "Ref": "CertificateArn"
            }
          }
        ]
      }
    },
    "Route53RecordSetGroup":
    {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" :
      {
        "Name" :{
          "Ref": "NuagesDomainName"
        },
        "Type" : "A",
        "HostedZoneId" : {"Ref" : "HostedZoneId"},
        "AliasTarget" :
        {
          "DNSName" :  { "Fn::GetAtt" : [ "NuagesDomainName", "RegionalDomainName" ] },
          "HostedZoneId" : { "Fn::GetAtt" : [ "NuagesDomainName", "RegionalHostedZoneId" ] }
        }
      }
    },
    "NuagesApiMapping": {
      "Type": "AWS::ApiGatewayV2::ApiMapping",
     
      "Properties": {
        "DomainName": {
          "Ref": "NuagesDomainName"
        },
        "ApiId": {
          "Ref": "NuagesPubSub"
        },
        "Stage": {
          "Ref" : "Stage"
        }
      }
    },
    "NuagesPubSubRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "NuagesPubSubRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": [ "lambda.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          }]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "LambdaBasicExecutionRole",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "*"
            }]
          }
        },
          {
            "PolicyName": "SystemsManagerParametersRole",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [{
                "Effect": "Allow",
                "Action": "ssm:GetParametersByPath",
                "Resource": "*"
              }]
            }
          },
          {
            "PolicyName" : "ExecuteApiConnectionRole",
              "PolicyDocument":
              {
                "Statement": {
                  "Effect": "Allow",
                  "Action": "execute-api:ManageConnections",
                  "Resource": "arn:aws:execute-api:*:*:*/@connections/*"
                }
            }
          }]
      }
    },
    "OnConnectFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "Nuages.PubSub.WebSocket.Application::Nuages.PubSub.WebSocket.Application.Functions::OnConnectHandlerAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": {
          "Fn::GetAtt": [
            "NuagesPubSubRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "Nuages__Mongo__Connection": {
              "Ref": "MongoConnectionString"
            },
            "Nuages__ConfigurationManagerPath": {
              "Ref": "ConfigurationManagerPath"
            },
            "Nuages__PubSub__Region":
            {
              "Ref" : "AWS::Region"
            },
            "Nuages__PubSub__Uri": {
              "Fn::Join": [
                "",
                [
                  "wss://",
                  {
                    "Ref": "NuagesPubSub"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".amazonaws.com/Prod"
                ]
              ]
            }
          }
        }
      }
    },
    "OnDisconnectFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "Nuages.PubSub.WebSocket.Application::Nuages.PubSub.WebSocket.Application.Functions::OnDisconnectHandlerAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": {
          "Fn::GetAtt": [
            "NuagesPubSubRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "Nuages__Mongo__Connection": {
              "Ref": "MongoConnectionString"
            },
            "Nuages__ConfigurationManagerPath": {
              "Ref": "ConfigurationManagerPath"
            },
            "Nuages__PubSub__Region":
            {
              "Ref" : "AWS::Region"
            },
            "Nuages__PubSub__Uri": {
              "Fn::Join": [
                "",
                [
                  "wss://",
                  {
                    "Ref": "NuagesPubSub"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".amazonaws.com/Prod"
                ]
              ]
            }
          }
        }
      }
    },
    "OnAuthorizeFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "Nuages.PubSub.WebSocket.Application::Nuages.PubSub.WebSocket.Application.Functions::OnAuthorizeHandlerAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": {
          "Fn::GetAtt": [
            "NuagesPubSubRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "Nuages__Mongo__Connection": {
              "Ref": "MongoConnectionString"
            },
            "Nuages__ConfigurationManagerPath": {
              "Ref": "ConfigurationManagerPath"
            },
            "Nuages__PubSub__ValidIssuers": {
              "Ref": "ValidIssuers"
            },
            "Nuages__PubSub__ValidAudiences": {
              "Ref": "ValidAudiences"
            },
            "Nuages__PubSub__Secret": {
              "Ref": "Secret"
            },
            "Nuages__PubSub__JsonWebKeySetUrlPath": {
              "Ref": "JsonWebKeySetUrlPath"
            },
            "Nuages__Auth_DisableSslCheck": {
              "Ref": "DisableSslCheck"
            }
          }
        }
      }
    },
    "SendToGroupFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "Nuages.PubSub.WebSocket.Application::Nuages.PubSub.WebSocket.Application.Functions::SendHandlerAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": {
          "Fn::GetAtt": [
            "NuagesPubSubRole",
            "Arn"
          ]
        }
        ,
        "Environment": {
          "Variables": {
            "Nuages__Mongo__Connection": {
              "Ref": "MongoConnectionString"
            },
            "Nuages__ConfigurationManagerPath": {
              "Ref": "ConfigurationManagerPath"
            },
            "Nuages__PubSub__Region":
            {
              "Ref" : "AWS::Region"
            },
            "Nuages__PubSub__Uri": {
              "Fn::Join": [
                "",
                [
                  "wss://",
                  {
                    "Ref": "NuagesPubSub"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".amazonaws.com/Prod"
                ]
              ]
            }
          }
        }
      }
    },
    "EchoFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "Nuages.PubSub.WebSocket.Application::Nuages.PubSub.WebSocket.Application.Functions::EchoHandlerAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": {
          "Fn::GetAtt": [
            "NuagesPubSubRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "Nuages__Mongo__Connection": {
              "Ref": "MongoConnectionString"
            },
            "Nuages__ConfigurationManagerPath": {
              "Ref": "ConfigurationManagerPath"
            },
            "Nuages__PubSub__Region":
            {
              "Ref" : "AWS::Region"
            },
            "Nuages__PubSub__Uri": {
              "Fn::Join": [
                "",
                [
                  "wss://",
                  {
                    "Ref": "NuagesPubSub"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".amazonaws.com/Prod"
                ]
              ]
            }
          }
        }
      }
    },
    "JoinGroupFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "Nuages.PubSub.WebSocket.Application::Nuages.PubSub.WebSocket.Application.Functions::JoinHandlerAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": {
          "Fn::GetAtt": [
            "NuagesPubSubRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "Nuages__Mongo__Connection": {
              "Ref": "MongoConnectionString"
            },
            "Nuages__ConfigurationManagerPath": {
              "Ref": "ConfigurationManagerPath"
            },
            "Nuages__PubSub__Region":
            {
              "Ref" : "AWS::Region"
            },
            "Nuages__PubSub__Uri": {
              "Fn::Join": [
                "",
                [
                  "wss://",
                  {
                    "Ref": "NuagesPubSub"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".amazonaws.com/Prod"
                ]
              ]
            }
          }
        }
      }
    },
    "LeaveGroupFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "Nuages.PubSub.WebSocket.Application::Nuages.PubSub.WebSocket.Application.Functions::LeaveHandlerAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": {
          "Fn::GetAtt": [
            "NuagesPubSubRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "Nuages__Mongo__Connection": {
              "Ref": "MongoConnectionString"
            },
            "Nuages__ConfigurationManagerPath": {
              "Ref": "ConfigurationManagerPath"
            },
            "Nuages__PubSub__Region":
            {
              "Ref" : "AWS::Region"
            },
            "Nuages__PubSub__Uri": {
              "Fn::Join": [
                "",
                [
                  "wss://",
                  {
                    "Ref": "NuagesPubSub"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".amazonaws.com/Prod"
                ]
              ]
            }
          }
        }
      }
    },
    "NuagesPubSub": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "Nuages-PubSub-2",
        "ProtocolType": "WEBSOCKET",
        "RouteSelectionExpression": "$request.body.type"
      }
    },
    "Authorizer": {
      "Type": "AWS::ApiGatewayV2::Authorizer",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSub"
        },
        "AuthorizerType": "REQUEST",
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region"
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "OnAuthorizeFunction",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        },
        "IdentitySource": [
          "route.request.querystring.access_token"
        ],
        "Name": "Authorizer"
      }
    },
    "ConnectRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSub"
        },
        "RouteKey": "$connect",
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "Authorizer"
        },
        "OperationName": "ConnectRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "ConnectInteg"
              }
            ]
          ]
        }
      }
    },
    "ConnectInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSub"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${function}/invocations",
            {
              "region": {
                "Ref": "AWS::Region"
              },
              "function": {
                "Fn::GetAtt": [
                  "OnConnectFunction",
                  "Arn"
                ]
              }
            }
          ]
        }
      }
    },
    "DisconnectRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSub"
        },
        "RouteKey": "$disconnect",
        "AuthorizationType": "NONE",
        "OperationName": "ConnectRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "DisconnectInteg"
              }
            ]
          ]
        }
      }
    },
    "DisconnectInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSub"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${function}/invocations",
            {
              "region": {
                "Ref": "AWS::Region"
              },
              "function": {
                "Fn::GetAtt": [
                  "OnDisconnectFunction",
                  "Arn"
                ]
              }
            }
          ]
        }
      }
    },
    "SendRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSub"
        },
        "RouteKey": "send",
        "AuthorizationType": "NONE",
        "OperationName": "SendRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "SendInteg"
              }
            ]
          ]
        }
      }
    },
    "SendInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSub"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${function}/invocations",
            {
              "region": {
                "Ref": "AWS::Region"
              },
              "function": {
                "Fn::GetAtt": [
                  "SendToGroupFunction",
                  "Arn"
                ]
              }
            }
          ]
        }
      }
    },
    "EchoRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSub"
        },
        "RouteKey": "echo",
        "AuthorizationType": "NONE",
        "OperationName": "EchoRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "EchoInteg"
              }
            ]
          ]
        }
      }
    },
    "EchoInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSub"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${function}/invocations",
            {
              "region": {
                "Ref": "AWS::Region"
              },
              "function": {
                "Fn::GetAtt": [
                  "EchoFunction",
                  "Arn"
                ]
              }
            }
          ]
        }
      }
    },
    "JoinRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSub"
        },
        "RouteKey": "join",
        "AuthorizationType": "NONE",
        "OperationName": "JoinRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "JoinInteg"
              }
            ]
          ]
        }
      }
    },
    "JoinInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSub"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${function}/invocations",
            {
              "region": {
                "Ref": "AWS::Region"
              },
              "function": {
                "Fn::GetAtt": [
                  "JoinGroupFunction",
                  "Arn"
                ]
              }
            }
          ]
        }
      }
    },
    "LeaveRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSub"
        },
        "RouteKey": "leave",
        "AuthorizationType": "NONE",
        "OperationName": "LeaveRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "LeaveInteg"
              }
            ]
          ]
        }
      }
    },
    "LeaveInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSub"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${function}/invocations",
            {
              "region": {
                "Ref": "AWS::Region"
              },
              "function": {
                "Fn::GetAtt": [
                  "LeaveGroupFunction",
                  "Arn"
                ]
              }
            }
          ]
        }
      }
    },
    "Deployment": {
      "Type": "AWS::ApiGatewayV2::Deployment",
      "DependsOn": [
        "ConnectRoute",
        "DisconnectRoute",
        "SendRoute",
        "EchoRoute",
        "JoinRoute",
        "LeaveRoute"
      ],
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSub"
        }
      }
    },
    "Stage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "NuagesPubSub"
        },
        "DeploymentId": {
          "Ref": "Deployment"
        },
        "StageName": "Prod"
      }
    },
    "OnConnectPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "OnConnectFunction",
        "NuagesPubSub"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "OnConnectFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "OnDisconnectPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "OnDisconnectFunction",
        "NuagesPubSub"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "OnDisconnectFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "SendPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "SendToGroupFunction",
        "NuagesPubSub"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "SendToGroupFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "EchoPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "EchoFunction",
        "NuagesPubSub"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "EchoFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "JoinPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "JoinGroupFunction",
        "NuagesPubSub"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "JoinGroupFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "LeavePermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "LeaveGroupFunction",
        "NuagesPubSub"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "LeaveGroupFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "OnAuthorizePermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "OnAuthorizeFunction",
        "NuagesPubSub"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "OnAuthorizeFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    }
  },
  "Outputs": {
    "NuagesPubSubURI": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "wss://",
            {
              "Ref": "NuagesPubSub"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".amazonaws.com/",
            {
              "Ref": "Stage"
            }
          ]
        ]
      },
      "Description": "The WSS Protocol URI to connect to"
    }
  }
}